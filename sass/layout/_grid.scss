.row {
    // Normalde grid satır için verilen genişlik.
    // width: 1140px;

    // Piksel yerine rem kullan
    // width: 114rem;

    // Responsive için max-width kullan
    max-width: $grid-width;

    @include respond(tab-port) {
        max-width: 50rem;
        padding: 0 3rem;
    }

    // Blok öğelerini ortalamak için trick
    margin: 0 auto;

    // Last-child hariç diğer tüm rowlara margin-bottom uygula
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;

        @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    @include clearfix;

    // Attribute selector kullan aynı kodlar için
    // col- ile başlayan tüm classları seç
    [class^="col-"] {
        // Float özelliği kullanılınca heigt özelliği 0'lanır. Clearfix yapmalıyız
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            @include respond(tab-port) {
                // Yanyana durmayacaklar artık
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        }

        // Tablet responsive
        @include respond(tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        // Calc fonksiyonu içinde değişken için # zorunlu
        // Tüm genişlikten yatay boşluğu çıkarıp 2 eş parçaya böl
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc((2 * (100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
        // width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}
